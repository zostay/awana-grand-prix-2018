# Gemma IO demo
# Welcome to CircuitPython 2.0.0 :)

import board
import time
from digitalio import DigitalInOut, Direction, Pull
from analogio import AnalogIn, AnalogOut
from touchio import TouchIn
from adafruit_hid.keyboard import Keyboard
from adafruit_hid.keycode import Keycode
import adafruit_dotstar as dotstar

# Digital output on D0
d0 = DigitalInOut(board.D0)
d1 = DigitalInOut(board.D1)

######################### HELPERS ##############################

program = [
    0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
    0x00, 0x02, 0x00, 0x02, 0x00, 0x02,
    0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
    0x00, 0x02, 0x00, 0x02, 0x00, 0x02,
    0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
    0x00, 0x02, 0x00, 0x02, 0x00, 0x02,

    0x01, 0x01, 0x01, 0x02, 0x02, 0x02,
    0x01, 0x01, 0x01, 0x02, 0x02, 0x02,
    0x01, 0x01, 0x01, 0x02, 0x02, 0x02,
    0x01, 0x01, 0x01, 0x02, 0x02, 0x02,
    0x01, 0x01, 0x01, 0x02, 0x02, 0x02,
    0x01, 0x01, 0x01, 0x02, 0x02, 0x02,

    0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
    0x00, 0x02, 0x00, 0x02, 0x00, 0x02,
    0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
    0x00, 0x02, 0x00, 0x02, 0x00, 0x02,
    0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
    0x00, 0x02, 0x00, 0x02, 0x00, 0x02,

    0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
    0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
    0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
    0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
    0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
    0x02, 0x02, 0x02, 0x02, 0x02, 0x02,

    0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
    0x00, 0x02, 0x00, 0x02, 0x00, 0x02,
    0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
    0x00, 0x02, 0x00, 0x02, 0x00, 0x02,
    0x00, 0x01, 0x00, 0x01, 0x00, 0x01,
    0x00, 0x02, 0x00, 0x02, 0x00, 0x02,

    0x00, 0x03, 0x00, 0x03, 0x00, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0x00, 0x03, 0x00, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0x00, 0x03, 0x00, 0x03,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

    0xff,
]

######################### MAIN LOOP ##############################

d0.direction = Direction.OUTPUT
d1.direction = Direction.OUTPUT

i = 0
while True:
    if program[i] == 0xff:
        i = 0

    if program[i] & 0x01:
        d0.value = 1
    else:
        d0.value = 0

    if program[i] & 0x02:
        d1.value = 1
    else:
        d1.value = 0

    time.sleep(0.065)
    i += 1
